<?xml version="1.0" encoding="UTF-8"?>
<!--
This file is part of the Panini project at Iowa State University.

The contents of this file are subject to the Mozilla Public License
Version 1.1 (the "License"); you may not use this file except in
compliance with the License. You may obtain a copy of the License at
http://www.mozilla.org/MPL/.

Software distributed under the License is distributed on an "AS IS" basis,
WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
for the specific language governing rights and limitations under the
License.

For more details and the latest version of this code please see
http://paninij.org

Contributor(s): Sean L. Mooney
-->
<project name="Panini Examples" basedir="." default="build">
    <property name="src.dir" value="${basedir}/." />
    <property name="panini.src.dir" value="${basedir}/." />
    <property name="build.dir" value="${basedir}/bin" />
    <property name="build.panini.dir" value="${build.dir}/panini"/>

    <!-- Relative to distribution directory after. -->
    <property name="panc.home"
              value=".."/>
    <property name="panc.jar"
              value="${panc.home}/lib/dist/lib/panc.jar" />
    <!--Ensure path is set up properly-->
    <available file="${panc.jar}" property="panc-jar-exists"/>
    <fail message="${panc.jar} does not exist."
          unless="panc-jar-exists" />

    <!-- Create a version of javac, which uses the javac.jar produced by the 
         panini compiler -->
    <presetdef name="panc">
        <javac fork="yes">
            <compilerarg value="-J-Xbootclasspath/p:${panc.jar}" />
        </javac>
    </presetdef>

    <target name="build" description="Build all examples"
        depends="build.Asteroids, build.Echo, build.Barbershop, build.HelloWorld, build.Pi,  build.Histogram, build.Fibonacci, build.Philosophers, build.Pipeline, build.Signature, build.AddressBook"/>

    <target name="build.Asteroids" description="">
        <build includes="Asteroids.java" example="Asteroids"/>
    </target>

    <target name="build.Echo" description="">
        <build includes="EchoClient.java, EchoServer.java" example="Echo"/>
    </target>

    <target name="build.Barbershop" description="">
        <build includes="Barbershop.java" example="Barbershop" />
    </target>

    <target name="build.HelloWorld" description="">
        <build includes="HelloWorld.java" example="HelloWorld"/>
    </target>

    <target name="build.Pi" description="">
        <build includes="Pi.java" example="Pi"/>
    </target>

    <target name="build.Histogram" description="">
        <build includes="Histogram.java" example="Histogram"/>
        <copy todir="${build.panini.dir}/Histogram">
            <fileset dir="${basedir}" includes="shaks12.txt" />
        </copy>
    </target>

    <target name="build.Fibonacci" description="">
        <build includes="Fibonacci.java" example="Fibonacci"/>
    </target>

    <target name="build.Philosophers" description="">
        <build includes="Philosophers.java" example="Philosophers"/>
    </target>

    <target name="build.Pipeline" description="">
        <build includes="Pipeline.java" example="Pipeline"/>
    </target>

    <target name="build.Signature" description="">
        <build includes="SignatureExample.java" example="Signature"/>
    </target>

    <target name="build.AddressBook" description="">
        <build includes="AddressBook/**/*.java"
               example="AddressBook"
               classpath="AddressBook/htmlparser.jar"/>
        <copy todir="${build.panini.dir}/AddressBook">
            <fileset dir="AddressBook" includes="*.xml, *.csv, *.jar" />
        </copy>
    </target>

    <!--========================================================================
        name: build
        Simplifies building a single example.
        =====================================================================-->
    <macrodef name="build">
        <attribute name="includes" />
        <attribute name="example" />
        <attribute name="classpath" default="" />
        <sequential>
        <mkdir dir="${build.panini.dir}/@{example}"/>
        <panc srcdir="${panini.src.dir}"
              destdir="${build.panini.dir}/@{example}"
              includes="@{includes}"
              includeantruntime="no"
              classpath="@{classpath}"
              debug="yes">
              <classpath />
        </panc>
        </sequential>
    </macrodef>


    <!--========================================================================
        name: clean
        =====================================================================-->
    <target name="clean" description="Delete generated files.">
        <delete failonerror="no">
            <fileset dir="${build.dir}" includes="**/*"/>
        </delete>
    </target>

</project>
